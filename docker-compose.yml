version: "3.8"

services:
  ptk_rabbitmq:
    image: rabbitmq:3-management
    container_name: ptk_rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - mspr-ptk

  postgres_customers:
    image: postgres:15
    container_name: postgres_customers
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - pg_customers_data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    networks:
      - mspr-ptk

  postgres_orders:
    image: postgres:15
    container_name: postgres_orders
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - pg_orders_data:/var/lib/postgresql/data
    ports:
      - '5434:5432'
    networks:
      - mspr-ptk

  postgres_products:
    image: postgres:15
    container_name: postgres_products
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - pg_products_data:/var/lib/postgresql/data
    ports:
      - '5435:5432'
    networks:
      - mspr-ptk

  api-customers:
    build:
      context: .
      dockerfile: apps/api-customers/Dockerfile
    container_name: api_customers
    ports:
      - "3000:3000"
    depends_on:
      - postgres_customers
      - ptk_rabbitmq
    environment:
      CUSTOMERS_DB_URL: postgres://user:password@postgres_customers:5432/postgres
      RABBITMQ_URL: amqp://admin:admin@ptk_rabbitmq:5672
    networks:
      - mspr-ptk

  api-orders:
    build:
      context: .
      dockerfile: apps/api-orders/Dockerfile
    container_name: api_orders
    ports:
      - "3001:3001"
    depends_on:
      - postgres_orders
      - ptk_rabbitmq
    environment:
      ORDERS_DB_URL: postgres://user:password@postgres_orders:5432/postgres
      RABBITMQ_URL: amqp://admin:admin@ptk_rabbitmq:5672
    networks:
      - mspr-ptk

  api-products:
    build:
      context: .
      dockerfile: apps/api-products/Dockerfile
    container_name: api_products
    ports:
      - "3002:3002"
    depends_on:
      - postgres_products
      - ptk_rabbitmq
    environment:
      PRODUCTS_DB_URL: postgres://user:password@postgres_products:5432/postgres
      RABBITMQ_URL: amqp://admin:admin@ptk_rabbitmq:5672
    networks:
      - mspr-ptk

  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter
    container_name: rabbitmq_exporter
    environment:
      RABBIT_URL: http://ptk_rabbitmq:15672
      RABBIT_USER: admin
      RABBIT_PASSWORD: admin
    ports:
      - "9419:9419"
    depends_on:
      - ptk_rabbitmq
    networks:
      - mspr-ptk

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - mspr-ptk

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3003:3000"
    networks:
      - mspr-ptk
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  rabbitmq_data:
  pg_customers_data:
  pg_orders_data:
  pg_products_data:
  grafana_data:

networks:
  mspr-ptk:
    driver: bridge
